<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.linkstec.crm.report.mapper.client">

    <!-- 新开户客户统计表 -->
    <select id="S_NewClientStat" parameterType="com.linkstec.crm.report.dto.ClientReportInDto" resultType="map">

        select crm.fn_get_dictvalue('client_type', x.client_type) as client_type,
        nvl(x.open_clients, 0) as open_clients /*注册客户*/,
        nvl(x.bound_card_clients, 0) as bound_card_clients, /*绑卡客户*/
        nvl(x.reg_bind_user, 0) as reg_bind_user /*注册并绑卡用户数*/,
        nvl(x.bind_buy_users, 0) as bind_buy_users /*绑卡并首次购买用户数*/,
        nvl(x.reg_buy_users, 0) as reg_buy_users /*注册并首次购买用户数*/,
        nvl(x.first_trade_balance, 0) as first_trade_balance /*首次购买金额*/,
        nvl(x.first_trade_clients, 0) as first_trade_clients /*首次购买客户*/,

        nvl(y.buy_accounts, 0) as buy_accounts /*购买用户 */,
        nvl(y.reg_buy_amount, 0) as reg_buy_amount /*注册并首次购买金额*/,
        nvl(y.buy_balance_except, 0) as buy_balance_except /*除活宝以外购买金额*/,
        nvl(y.buy_accounts_except, 0) as buy_accounts_except /*除活宝以外购买人数*/,

        case
        when nvl(x.open_clients, 0) = 0 then
        0
        else
        nvl(x.reg_bind_user, 0) / x.open_clients * 100
        end as reg_bind_radio /*注册-绑卡转化率*/,
        case
        when nvl(x.bound_card_clients, 0) = 0 then
        0
        else
        nvl(x.bind_buy_users, 0) / x.bound_card_clients * 100
        end as bind_buy_radio /*绑卡-购买转化率*/,
        case
        when nvl(x.open_clients, 0) = 0 then
        0
        else
        nvl(x.reg_buy_users, 0) / x.open_clients * 100
        end as reg_buy_radio /*注册-购买转化率*/

        from (select a.client_type,
        sum(case
        when (a.open_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd'))) then
        1
        else
        0
        end) as open_clients, /*注册客户数 修改*/
        sum(case
        when (a.bound_card_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd'))) then
        1
        else
        0
        end) as bound_card_clients, /*绑卡客户数 修改 */
        sum(case
        when (a.open_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd')) and
        a.bound_card_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd'))) then
        1
        else
        0
        end) as reg_bind_user, /*注册并绑卡用户数*/
        sum(case
        when (a.open_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd')) and
        a.first_trade_date between
        to_number(to_char(#{beginDate},'yyyyMMdd')) and to_number(to_char(#{endDate},'yyyyMMdd'))) and
        <![CDATA[a.first_trade_amount <> 0]]> then
        1
        else
        0
        end) as reg_buy_users, /*注册并首次购买用户数*/
        sum(case
        when (a.bound_card_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd')) and
        a.first_trade_date between
        to_number(to_char(#{beginDate},'yyyyMMdd')) and to_number(to_char(#{endDate},'yyyyMMdd'))) and
        <![CDATA[a.first_trade_amount <> 0]]>
        then
        1
        else
        0
        end) as bind_buy_users, /*绑卡并首次购买用户数 */
        sum(case
        when (a.first_trade_date between
        to_number(to_char(#{beginDate},'yyyyMMdd')) and to_number(to_char(#{endDate},'yyyyMMdd'))) then
        a.first_trade_amount
        else
        0
        end) as first_trade_balance, /*首次购买金额*/

        sum(case
        when (a.first_trade_date between
        to_number(to_char(#{beginDate},'yyyyMMdd')) and to_number(to_char(#{endDate},'yyyyMMdd'))) then
        1
        else
        0
        end) as first_trade_clients/*首次购买客户数*/
        from jhdc.clientinfox a
        where 1=1
        <if test="branchNo!=null">
            and a.branch_no in
            <foreach collection="branchNo" open="(" separator="," close=")" item="item">
                #{item}
            </foreach>
        </if>
        <if test="clientSource!=null">
            and a.client_source=#{clientSource}
        </if>
        group by a.client_type) x
        left join (
        select a.client_type,
        sum(case
        when   <![CDATA[b.product_type <> '2']]>  then
        b.deal_balance
        else
        0
        end) as buy_balance_except /*除活宝以外购买金额*/,

        sum(case
        when (a.open_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd')) and
        a.first_trade_date between
        to_number(to_char(#{beginDate},'yyyyMMdd')) and to_number(to_char(#{endDate},'yyyyMMdd'))) and
        <![CDATA[a.first_trade_amount <> 0]]>
        then
        b.deal_balance
        else
        0
        end) as reg_buy_amount, /*注册并首次购买金额*/

        count(distinct b.client_id) as buy_accounts, /*购买用户 */
        count(distinct(case
        when <![CDATA[b.product_type <> '2']]> then
        b.client_id
        else
        null
        end)) as buy_accounts_except /*除活宝以外购买人数*/
        from jhdc.histradeinfojour b left join jhdc.clientinfox a
        on (a.client_id = b.client_id and
        b.init_date between to_number(to_char(#{beginDate},'yyyyMMdd'))
        and to_number(to_char(#{endDate},'yyyyMMdd'))
        and b.bs_flag = 'B'
        )
        where 1=1
        <if test="branchNo!=null">
            and a.branch_no in
            <foreach collection="branchNo" open="(" separator="," close=")" item="item">
                #{item}
            </foreach>
        </if>
        <if test="clientSource!=null">
            and a.client_source=#{clientSource}
        </if>
        group by a.client_type
        )y on x.client_type=y.client_type
        order by x.client_type
    </select>
    <!-- 客户分类统计表 -->
    <select id="S_ClientTypeStat" parameterType="com.linkstec.crm.report.dto.ClientReportInDto" resultType="map">
        select (case when x.client_type is not null then crm.fn_get_dictvalue('client_type', x.client_type) else
        crm.fn_get_dictvalue('client_type', j.client_type) end) as client_type,
        nvl(y.buy_users,0) buy_users, /*购买用户数*/
        nvl(y.new_clients,0) new_clients, /*新用户数*/
        nvl((y.buy_users - y.new_clients),0) as old_clients, /*老用户数*/
        nvl(y.buy_amount,0) buy_amount, /*购买金额*/
        nvl(y.new_buy_amount,0) new_buy_amount, /*新用户购买金额*/
        nvl((y.buy_amount - y.new_buy_amount),0) as old_buy_amount, /*老用户购买金额*/
        nvl(y.defer_users,0) defer_users, /*滚存人数*/
        nvl(x.defer_shares,0) defer_shares, /*滚存份额*/
        nvl(x.defer_balance,0) defer_balance /*滚存金额*/
        ,nvl(j.mvalue,0) mvalue
        ,nvl(j.stocknum,0) stocknum
        from (
        select client_type,
        <!-- 					sum(buy_accounts) as buy_users,/*购买用户数*/ -->
        <!-- 					sum(buy_balance) as buy_amount,/*购买金额*/ -->
        <!-- 					sum(defer_users) as defer_users,/*滚存人数*/ -->
        sum(defer_shares) as defer_shares,/*滚存份额*/
        sum(defer_balance) as defer_balance /*滚存金额*/
        from jhdc.hisclientsourcejour
        <where>
            <if test="beginDate!=null and endDate!=null">
                init_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
                to_number(to_char(#{endDate},'yyyyMMdd'))
            </if>
            <if test="branchNo!=null">
                and branch_no in
                <foreach collection="branchNo" open="(" separator="," close=")" item="item">
                    #{item}
                </foreach>
            </if>
        </where>
        group by client_type
        ) x
        join (
        select
        a.client_type,
        count(distinct (case when (b.open_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd'))
        and b.first_trade_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd')))
        then a.client_id else null end)) as new_clients/*首次购买用户数*/
        ,sum(case when (b.open_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd'))
        and b.first_trade_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd')) )
        then a.buy_amount else 0 end ) as new_buy_amount /*购买金额*/
        ,sum(a.buy_amount) buy_amount
        ,count(distinct a.client_id) as buy_users /*购买用户数*/
        ,count(distinct (case when <![CDATA[a.defer_shares <> 0]]> then a.client_id else null end)) as defer_users
        <!-- 				,sum(case when a.defer_shares<> 0 then a.defer_shares else 0 end ) as defer_shares		/*滚存份额*/ -->
        from jhdc.hisclient_product_trade a,jhdc.clientinfox b
        where
        <![CDATA[a.buy_times <> 0]]> and a.client_id = b.client_id
        <!-- 				(a.buy_share &gt; 0 or a.buy_amount &gt; 0) -->
        <!-- 			 	and a.client_id in( -->
        <!-- 				select b.client_id from jhdc.clientinfox b  -->
        <!-- 				where -->
        <if test="beginDate!=null and endDate!=null">
            and a.init_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
            to_number(to_char(#{endDate},'yyyyMMdd'))
            <!-- 						and b.open_date  between  to_number(to_char(#{beginDate},'yyyyMMdd')) and to_number(to_char(#{endDate},'yyyyMMdd')) -->
            <!-- 						and b.first_trade_date  between to_number(to_char(#{beginDate},'yyyyMMdd')) and to_number(to_char(#{endDate},'yyyyMMdd')) -->
        </if>
        <if test="branchNo!=null">
            and a.branch_no in
            <foreach collection="branchNo" open="(" separator="," close=")" item="item">
                #{item}
            </foreach>
        </if>
        <!-- 查询条件 -->
        <if test="productType!=null">
            and a.product_type in
            <foreach collection="productType" open="(" separator="," close=")" item="item">
                #{item}
            </foreach>
        </if>
        <if test="fundCompany!=null">
            and a.fund_company = #{fundCompany}
        </if>
        <!-- 					) -->
        group by a.client_type
        ) y
        on
        x.client_type = y.client_type
        full join (select nvl(sum(j.market_value),0) mvalue,nvl(count(distinct j.client_id),0) stocknum,j.client_type
        from jhdc.hisstockjour j
        where j.init_date = to_number(to_char(#{endDate},'yyyyMMdd')) and j.current_share - j.back_share >0
        <if test="branchNo!=null">
            and j.branch_no in
            <foreach collection="branchNo" open="(" separator="," close=")" item="item">
                #{item}
            </foreach>
        </if>
        <if test="productType!=null">
            and j.product_type in
            <foreach collection="productType" open="(" separator="," close=")" item="item">
                #{item}
            </foreach>
        </if>
        <if test="fundCompany!=null">
            and j.fund_company = #{fundCompany}
        </if>
        group by j.client_type) j
        on j.client_type = x.client_type
        order by client_type
    </select>
    <!-- 每日客户统计表 -->
    <select id="S_ClientTypeDailyStat" parameterType="com.linkstec.crm.report.dto.ClientReportInDto" resultType="map">
        select
        init_date
        ,open_clients /*注册客户*/
        ,bound_card_clients /*绑卡客户*/
        ,first_trade_clients /*首次购买客户*/
        ,buy_accounts /*购买客户*/
        ,buy_times /*购买次数*/
        ,buy_balance /*购买金额*/
        ,buy_accounts_except /*除活宝以外购买人数*/
        ,buy_balance_except /*除活宝以外购买金额*/
        ,defer_shares /*滚存份额*/
        ,defer_balance /*滚存金额*/
        ,crm.fn_get_dictvalue('client_type',client_type) as client_type /*客户类型*/
        ,crm.fn_get_dictvalue('client_source',client_source) as client_source /*客户来源*/
        ,crm.fn_get_branchname(branch_no) as branch_no /*渠道名称*/
        from jhdc.hisclientsourcejour
        <where>
            <if test="beginDate!=null and endDate!=null">
                init_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
                to_number(to_char(#{endDate},'yyyyMMdd'))
            </if>
            <if test="branchNo!=null">
                and branch_no in
                <foreach collection="branchNo" open="(" separator="," close=")" item="item">
                    #{item}
                </foreach>
            </if>
            <if test="clientType!=null">
                and client_type=#{clientType}
            </if>
            <if test="clientSource!=null">
                and client_source=#{clientSource}
            </if>
        </where>
        order by init_date
    </select>
    <!-- 客户性别分类统计表 -->
    <select id="S_ClientSexStat" parameterType="com.linkstec.crm.report.dto.ClientReportInDto" resultType="map">
        select a.client_sex, NVL (a.reg_users, 0) reg_users, NVL (a.bind_users, 0) bind_users,
        NVL (a.reg_bind_users, 0) reg_bind_users, NVL (a.bind_buy_users, 0) bind_buy_users,
        NVL (a.reg_buy_users, 0) reg_buy_users, NVL (b.buy_users, 0) buy_users, NVL (b.buy_amount, 0) buy_amount,
        NVL (b.stock_users, 0) stock_users, NVL (b.stock_value, 0) stock_value
        from
        (select
        DECODE( c.client_sex,' ','机构','2','机构',crm.fn_get_dictvalue('SEX', c.client_sex)) as client_sex,
        count(case when c.open_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd')) then c.client_id else null end) as reg_users,
        count(case when c.bound_card_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd')) then c.client_id else null end) as bind_users,
        count(case when c.bound_card_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd')) and c.open_date between to_number(to_char(#{beginDate},'yyyyMMdd'))
        and to_number(to_char(#{endDate},'yyyyMMdd')) then c.client_id else null end) as reg_bind_users,
        count(case when c.bound_card_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd')) and c.first_trade_date between
        to_number(to_char(#{beginDate},'yyyyMMdd')) and to_number(to_char(#{endDate},'yyyyMMdd')) then c.client_id else
        null end) as bind_buy_users,
        count(case when c.open_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd')) and c.first_trade_date between
        to_number(to_char(#{beginDate},'yyyyMMdd')) and to_number(to_char(#{endDate},'yyyyMMdd')) then c.client_id else
        null end) as reg_buy_users
        from jhdc.clientinfox c
        <where>
            <if test="beginDate!=null and endDate!=null">
                and (c.open_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
                to_number(to_char(#{endDate},'yyyyMMdd'))
                or c.bound_card_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
                to_number(to_char(#{endDate},'yyyyMMdd'))
                or c.first_trade_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
                to_number(to_char(#{endDate},'yyyyMMdd')) )
            </if>
            <if test="branchNo != null">
                and c.branch_no in
                <foreach collection="branchNo" open="(" separator="," close=")" item="item">
                    #{item}
                </foreach>
            </if>
            <if test="clientType != null">
                and c.client_type=#{clientType}
            </if>
            <if test="clientSource!=null">
                and c.client_source=#{clientSource}
            </if>
            and exists (select 1 from crm.lmsp_datadict t where t.dd_type = 'SEX' and t.dd_key = c.client_sex)
        </where>
        group by c.client_sex)a

        left join

        (select a.client_sex,NVL (a.buy_users, 0) buy_users,NVL (a.buy_amount, 0) buy_amount,
        NVL (b.stock_users, 0) stock_users,NVL (b.stock_value, 0) stock_value
        from
        (select
        DECODE( c.client_sex,' ','机构','2','机构',crm.fn_get_dictvalue('SEX', c.client_sex)) as client_sex,
        count(distinct t.client_id) as buy_users,
        sum(t.buy_amount) as buy_amount
        from jhdc.hisclient_product_trade t, jhdc.clientinfox c
        <where>
            c.client_id = t.client_id and <![CDATA[t.buy_times <>0]]>
            <if test="beginDate!=null and endDate!=null">
                and t.init_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
                to_number(to_char(#{endDate},'yyyyMMdd'))
            </if>
            <if test="branchNo != null">
                and c.branch_no in
                <foreach collection="branchNo" open="(" separator="," close=")" item="item">
                    #{item}
                </foreach>
            </if>
            <if test="clientType != null">
                and c.client_type=#{clientType}
            </if>
            <if test="clientSource!=null">
                and c.client_source=#{clientSource}
            </if>
            <if test="productType!=null">
                and t.product_type in
                <foreach collection="productType" open="(" separator="," close=")" item="item">
                    #{item}
                </foreach>
            </if>
            and exists (select 1 from crm.lmsp_datadict t where t.dd_type = 'SEX' and t.dd_key = c.client_sex)
        </where>
        group by c.client_sex)a

        full join

        (select
        DECODE( c.client_sex,' ','机构','2','机构',crm.fn_get_dictvalue('SEX', c.client_sex)) as client_sex,
        count(distinct j.client_id) stock_users,
        sum(j.market_value) stock_value
        from jhdc.hisstockjour j,jhdc.clientinfox c
        where j.init_date = to_number(to_char(#{endDate},'yyyyMMdd')) and j.current_share - j.back_share > 0
        and j.client_id = c.client_id
        <if test="branchNo != null">
            and c.branch_no in
            <foreach collection="branchNo" open="(" separator="," close=")" item="item">
                #{item}
            </foreach>
        </if>
        <if test="clientType != null">
            and c.client_type=#{clientType}
        </if>
        <if test="clientSource!=null">
            and c.client_source=#{clientSource}
        </if>
        <if test="productType!=null">
            and j.product_type in
            <foreach collection="productType" open="(" separator="," close=")" item="item">
                #{item}
            </foreach>
        </if>
        and exists (select 1 from crm.lmsp_datadict t where t.dd_type = 'SEX' and t.dd_key = c.client_sex)
        group by c.client_sex)b on a.client_sex=b.client_sex )b
        on a.client_sex=b.client_sex
    </select>

    <!-- 客户年龄分类统计表 -->
    <select id="S_ClientAgeStat" parameterType="com.linkstec.crm.report.dto.ClientReportInDto" resultType="map">
        select
        a.ageStat,a.reg_users,a.bind_users,a.reg_bind_users,a.bind_buy_users,a.reg_buy_users,d.buy_users,d.buy_amount,d.stock_users,d.stock_value
        from
        (select T.ageStat, NVL (T.reg_users, 0) reg_users, NVL (T.bind_users, 0) bind_users, NVL (T.reg_bind_users, 0)
        reg_bind_users,
        NVL (T.bind_buy_users, 0) bind_buy_users, NVL (T.reg_buy_users, 0) reg_buy_users
        from
        (
        (select
        count(case when c.age&lt;='20' and c.open_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd')) then c.client_id else null end) as twenty_reg_users,
        count(case when c.age&gt;='21' and c.age&lt;='30' and c.open_date between
        to_number(to_char(#{beginDate},'yyyyMMdd')) and to_number(to_char(#{endDate},'yyyyMMdd')) then c.client_id else
        null end) as thirty_reg_users,
        count(case when c.age&gt;='31' and c.age&lt;='40' and c.open_date between
        to_number(to_char(#{beginDate},'yyyyMMdd')) and to_number(to_char(#{endDate},'yyyyMMdd')) then c.client_id else
        null end) as forty_reg_users,
        count(case when c.age&gt;='41' and c.age&lt;='50' and c.open_date between
        to_number(to_char(#{beginDate},'yyyyMMdd')) and to_number(to_char(#{endDate},'yyyyMMdd')) then c.client_id else
        null end) as fifty_reg_users,
        count(case when c.age&gt;='51' and c.age&lt;='60' and c.open_date between
        to_number(to_char(#{beginDate},'yyyyMMdd')) and to_number(to_char(#{endDate},'yyyyMMdd')) then c.client_id else
        null end) as sixty_reg_users,
        count(case when c.age&gt;='61' and c.open_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd')) then c.client_id else null end) as all_reg_users,

        count(case when c.age&lt;='20' and c.bound_card_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd')) then c.client_id else null end) as twenty_bind_users,
        count(case when c.age&gt;='21' and c.age&lt;='30' and c.bound_card_date between
        to_number(to_char(#{beginDate},'yyyyMMdd')) and to_number(to_char(#{endDate},'yyyyMMdd')) then c.client_id else
        null end) as thirty_bind_users,
        count(case when c.age&gt;='31' and c.age&lt;='40' and c.bound_card_date between
        to_number(to_char(#{beginDate},'yyyyMMdd')) and to_number(to_char(#{endDate},'yyyyMMdd')) then c.client_id else
        null end) as forty_bind_users,
        count(case when c.age&gt;='41' and c.age&lt;='50' and c.bound_card_date between
        to_number(to_char(#{beginDate},'yyyyMMdd')) and to_number(to_char(#{endDate},'yyyyMMdd')) then c.client_id else
        null end) as fifty_bind_users,
        count(case when c.age&gt;='51' and c.age&lt;='60' and c.bound_card_date between
        to_number(to_char(#{beginDate},'yyyyMMdd')) and to_number(to_char(#{endDate},'yyyyMMdd')) then c.client_id else
        null end) as sixty_bind_users,
        count(case when c.age&gt;='61' and c.bound_card_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd')) then c.client_id else null end) as all_bind_users,

        count(case when c.age&lt;='20' and c.bound_card_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd'))
        and c.open_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd'))
        then c.client_id else null end) as twenty_reg_bind_users,
        count(case when c.age&gt;='21' and c.age&lt;='30' and c.bound_card_date between
        to_number(to_char(#{beginDate},'yyyyMMdd')) and to_number(to_char(#{endDate},'yyyyMMdd'))
        and c.open_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd'))
        then c.client_id else null end) as thirty_reg_bind_users,
        count(case when c.age&gt;='31' and c.age&lt;='40' and c.bound_card_date between
        to_number(to_char(#{beginDate},'yyyyMMdd')) and to_number(to_char(#{endDate},'yyyyMMdd'))
        and c.open_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd'))
        then c.client_id else null end) as forty_reg_bind_users,
        count(case when c.age&gt;='41' and c.age&lt;='50' and c.bound_card_date between
        to_number(to_char(#{beginDate},'yyyyMMdd')) and to_number(to_char(#{endDate},'yyyyMMdd'))
        and c.open_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd'))
        then c.client_id else null end) as fifty_reg_bind_users,
        count(case when c.age&gt;='51' and c.age&lt;='60' and c.bound_card_date between
        to_number(to_char(#{beginDate},'yyyyMMdd')) and to_number(to_char(#{endDate},'yyyyMMdd'))
        and c.open_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd'))
        then c.client_id else null end) as sixty_reg_bind_users,
        count(case when c.age&gt;='61' and c.bound_card_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd'))
        and c.open_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd'))
        then c.client_id else null end) as all_reg_bind_users,


        count(case when c.age&lt;='20' and c.bound_card_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd'))
        and c.first_trade_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd'))
        then c.client_id else null end) as twenty_bind_buy_users,
        count(case when c.age&gt;='21' and c.age&lt;='30' and c.bound_card_date between
        to_number(to_char(#{beginDate},'yyyyMMdd')) and to_number(to_char(#{endDate},'yyyyMMdd'))
        and c.first_trade_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd'))
        then c.client_id else null end) as thirty_bind_buy_users,
        count(case when c.age&gt;='31' and c.age&lt;='40' and c.bound_card_date between
        to_number(to_char(#{beginDate},'yyyyMMdd')) and to_number(to_char(#{endDate},'yyyyMMdd'))
        and c.first_trade_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd'))
        then c.client_id else null end) as forty_bind_buy_users,
        count(case when c.age&gt;='41' and c.age&lt;='50' and c.bound_card_date between
        to_number(to_char(#{beginDate},'yyyyMMdd')) and to_number(to_char(#{endDate},'yyyyMMdd'))
        and c.first_trade_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd'))
        then c.client_id else null end) as fifty_bind_buy_users,
        count(case when c.age&gt;='51' and c.age&lt;='60' and c.bound_card_date between
        to_number(to_char(#{beginDate},'yyyyMMdd')) and to_number(to_char(#{endDate},'yyyyMMdd'))
        and c.first_trade_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd'))
        then c.client_id else null end) as sixty_bind_buy_users,
        count(case when c.age&gt;='61' and c.bound_card_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd'))
        and c.first_trade_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd'))
        then c.client_id else null end) as all_bind_buy_users,


        count(case when c.age&lt;='20' and c.open_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd'))
        and c.first_trade_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd'))
        then c.client_id else null end) as twenty_reg_buy_users,
        count(case when c.age&gt;='21' and c.age&lt;='30' and c.open_date between
        to_number(to_char(#{beginDate},'yyyyMMdd')) and to_number(to_char(#{endDate},'yyyyMMdd'))
        and c.first_trade_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd'))
        then c.client_id else null end) as thirty_reg_buy_users,
        count(case when c.age&gt;='31' and c.age&lt;='40' and c.open_date between
        to_number(to_char(#{beginDate},'yyyyMMdd')) and to_number(to_char(#{endDate},'yyyyMMdd'))
        and c.first_trade_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd'))
        then c.client_id else null end) as forty_reg_buy_users,
        count(case when c.age&gt;='41' and c.age&lt;='50' and c.open_date between
        to_number(to_char(#{beginDate},'yyyyMMdd')) and to_number(to_char(#{endDate},'yyyyMMdd'))
        and c.first_trade_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd'))
        then c.client_id else null end) as fifty_reg_buy_users,
        count(case when c.age&gt;='51' and c.age&lt;='60' and c.open_date between
        to_number(to_char(#{beginDate},'yyyyMMdd')) and to_number(to_char(#{endDate},'yyyyMMdd'))
        and c.first_trade_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd'))
        then c.client_id else null end) as sixty_reg_buy_users,
        count(case when c.age&gt;='61' and c.open_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd'))
        and c.first_trade_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd'))
        then c.client_id else null end) as all_reg_buy_users
        from jhdc.clientinfox c
        <where>
            <if test="beginDate!=null and endDate!=null">
                and (c.open_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
                to_number(to_char(#{endDate},'yyyyMMdd'))
                or c.bound_card_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
                to_number(to_char(#{endDate},'yyyyMMdd'))
                or c.first_trade_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
                to_number(to_char(#{endDate},'yyyyMMdd')) )
            </if>
            <if test="branchNo != null">
                and c.branch_no in
                <foreach collection="branchNo" open="(" separator="," close=")" item="item">
                    #{item}
                </foreach>
            </if>
            <if test="clientType != null">
                and c.client_type=#{clientType}
            </if>
            <if test="clientSource!=null">
                and c.client_source=#{clientSource}
            </if>
        </where>
        )
        UNPIVOT ((reg_users,bind_users,reg_bind_users,bind_buy_users,reg_buy_users) FOR ageStat IN (
        (twenty_reg_users,twenty_bind_users,twenty_reg_bind_users,twenty_bind_buy_users,twenty_reg_buy_users) AS '~20岁',
        (thirty_reg_users,thirty_bind_users,thirty_reg_bind_users,thirty_bind_buy_users,thirty_reg_buy_users) AS
        '21~30岁',
        (forty_reg_users,forty_bind_users,forty_reg_bind_users,forty_bind_buy_users,forty_reg_buy_users) AS '31~40岁',
        (fifty_reg_users,fifty_bind_users,fifty_reg_bind_users,fifty_bind_buy_users,fifty_reg_buy_users) AS '41~50岁',
        (sixty_reg_users,sixty_bind_users,sixty_reg_bind_users,sixty_bind_buy_users,sixty_reg_buy_users) AS '51~60岁',
        (all_reg_users,all_bind_users,all_reg_bind_users,all_bind_buy_users,all_reg_buy_users) AS '61岁以上')))T)a,


        (select b.nlStat,b.buy_users,b.buy_amount,c.stock_users,c.stock_value from
        (select T.nlStat, NVL (T.buy_users, 0) buy_users, NVL (T.buy_amount, 0) buy_amount
        from
        (
        (select
        count(distinct case when c.age&lt;='20' then t.client_id else null end) as twenty_buy_users,
        count(distinct case when c.age&gt;='21' and c.age&lt;='30' then t.client_id else null end) as thirty_buy_users,
        count(distinct case when c.age&gt;='31' and c.age&lt;='40' then t.client_id else null end) as forty_buy_users,
        count(distinct case when c.age&gt;='41' and c.age&lt;='50' then t.client_id else null end) as fifty_buy_users,
        count(distinct case when c.age&gt;='51' and c.age&lt;='60' then t.client_id else null end) as sixty_buy_users,
        count(distinct case when c.age&gt;='61' then t.client_id else null end) as all_buy_users,


        sum(case when c.age&lt;='20' then t.buy_amount else null end) as twenty_buy_amount,
        sum(case when c.age&gt;='21' and c.age&lt;='30' then t.buy_amount else null end) as thirty_buy_amount,
        sum(case when c.age&gt;='31' and c.age&lt;='40' then t.buy_amount else null end) as forty_buy_amount,
        sum(case when c.age&gt;='41' and c.age&lt;='50' then t.buy_amount else null end) as fifty_buy_amount,
        sum(case when c.age&gt;='51' and c.age&lt;='60' then t.buy_amount else null end) as sixty_buy_amount,
        sum(case when c.age&gt;='61' then t.buy_amount else null end) as all_buy_amount
        from jhdc.hisclient_product_trade t
        left join jhdc.clientinfox c on c.client_id = t.client_id
        <where>
            <![CDATA[t.buy_times <>0]]>
            <if test="beginDate!=null and endDate!=null">
                and t.init_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
                to_number(to_char(#{endDate},'yyyyMMdd'))
            </if>
            <if test="branchNo != null">
                and c.branch_no in
                <foreach collection="branchNo" open="(" separator="," close=")" item="item">
                    #{item}
                </foreach>
            </if>
            <if test="clientType != null">
                and c.client_type=#{clientType}
            </if>
            <if test="clientSource!=null">
                and c.client_source=#{clientSource}
            </if>
            <if test="productType!=null">
                and t.product_type in
                <foreach collection="productType" open="(" separator="," close=")" item="item">
                    #{item}
                </foreach>
            </if>
        </where>
        )
        UNPIVOT ((buy_users,buy_amount) FOR nlStat IN (
        (twenty_buy_users,twenty_buy_amount) AS '~20岁',
        (thirty_buy_users,thirty_buy_amount) AS '21~30岁',
        (forty_buy_users,forty_buy_amount) AS '31~40岁',
        (fifty_buy_users,fifty_buy_amount) AS '41~50岁',
        (sixty_buy_users,sixty_buy_amount) AS '51~60岁',
        (all_buy_users,all_buy_amount) AS '61岁以上')))T)b,

        (SELECT T.yearStat,NVL (T.stock_users, 0) stock_users,NVL (T.stock_value, 0) stock_value
        FROM
        (
        (select
        count(distinct case when c.age&lt;='20' then t.client_id else null end) as twenty_stock_users,
        count(distinct case when c.age&gt;='21' and c.age&lt;='30' then t.client_id else null end) as
        thirty_stock_users,
        count(distinct case when c.age&gt;='31' and c.age&lt;='40' then t.client_id else null end) as forty_stock_users,
        count(distinct case when c.age&gt;='41' and c.age&lt;='50' then t.client_id else null end) as fifty_stock_users,
        count(distinct case when c.age&gt;='51' and c.age&lt;='60' then t.client_id else null end) as sixty_stock_users,
        count(distinct case when c.age&gt;='61' then t.client_id else null end) as all_stock_users,

        sum(case when c.age&lt;='20' then t.market_value else null end) as twenty_stock_value,
        sum(case when c.age&gt;='21' and c.age&lt;='30' then t.market_value else null end) as thirty_stock_value,
        sum(case when c.age&gt;='31' and c.age&lt;='40' then t.market_value else null end) as forty_stock_value,
        sum(case when c.age&gt;='41' and c.age&lt;='50' then t.market_value else null end) as fifty_stock_value,
        sum(case when c.age&gt;='51' and c.age&lt;='60' then t.market_value else null end) as sixty_stock_value,
        sum(case when c.age&gt;='61' then t.market_value else null end) as all_stock_value
        from jhdc.hisstockjour t
        left join jhdc.clientinfox c on t.client_id = c.client_id
        where t.init_date = to_number(to_char(#{endDate},'yyyyMMdd')) and t.current_share - t.back_share > 0
        <if test="branchNo != null">
            and c.branch_no in
            <foreach collection="branchNo" open="(" separator="," close=")" item="item">
                #{item}
            </foreach>
        </if>
        <if test="clientType != null">
            and c.client_type=#{clientType}
        </if>
        <if test="clientSource!=null">
            and c.client_source=#{clientSource}
        </if>
        <if test="productType!=null">
            and t.product_type in
            <foreach collection="productType" open="(" separator="," close=")" item="item">
                #{item}
            </foreach>
        </if>
        )
        UNPIVOT ((stock_users,stock_value) FOR yearStat IN (
        (twenty_stock_users,twenty_stock_value) AS '~20岁',
        (thirty_stock_users,thirty_stock_value) AS '21~30岁',
        (forty_stock_users,forty_stock_value) AS '31~40岁',
        (fifty_stock_users,fifty_stock_value) AS '41~50岁',
        (sixty_stock_users,sixty_stock_value) AS '51~60岁',
        (all_stock_users,all_stock_value) AS '61岁以上')))T)c
        where b.nlStat=c.yearStat)d where a.ageStat=d.nlStat
    </select>

    <!-- 客户地域分部统计表 -->
    <select id="S_ClientSectionStat" parameterType="com.linkstec.crm.report.dto.ClientReportInDto" resultType="map">
        select * from (select
        nvl(x.opennum,0) as open_clients/*注册人数*/
        ,nvl(x.boundnum,0) as bound_clients/*绑卡人数*/
        ,z.name as name
        ,nvl(y.buybalance,0) as buy_balance/*购买金额*/
        ,nvl(y.buynum,0) as buy_clients/*购买人数*/
        ,nvl(x.rboundnum,0) as rboundnum,/*注册并绑卡*/
        nvl(x.bboundnum,0) as bboundnum,/*绑卡并购买*/
        nvl(x.bopennum,0) as bopennum,/*注册并购买*/
        nvl(y.stocknum,0) as stocknum,/*持仓人数*/
        nvl(y.stockbalance,0) as stockbalance/*持仓金额*/
        ,(case when y.buynum = 0 or y.buynum is null then 0 else y.buybalance/y.buynum end) as avg
        from ( select
        count(case when c.open_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd')) then c.client_id else null end) as opennum
        ,count(case when c.bound_card_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd')) then c.client_id else null end) as boundnum
        ,count(case when c.bound_card_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd')) and
        c.open_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and to_number(to_char(#{endDate},'yyyyMMdd'))
        then
        c.client_id else null end) as rboundnum,
        count(case when c.bound_card_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd')) and
        c.first_trade_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd')) then
        c.client_id else null end) as bboundnum,
        count(case when c.open_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd')) and
        c.first_trade_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd')) then
        c.client_id else null end) as bopennum,
        c.province_no
        from jhdc.clientinfox c
        <where>
            c.province_no not in (' ', '00')
            <if test="beginDate!=null and endDate!=null">
                and (c.open_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
                to_number(to_char(#{endDate},'yyyyMMdd'))
                or c.bound_card_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
                to_number(to_char(#{endDate},'yyyyMMdd'))
                or c.first_trade_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
                to_number(to_char(#{endDate},'yyyyMMdd')) )
            </if>
            <if test="branchNo != null">
                and c.branch_no in
                <foreach collection="branchNo" open="(" separator="," close=")" item="item">
                    #{item}
                </foreach>
            </if>
            <if test="clientType != null">
                and c.client_type=#{clientType}
            </if>
            <if test="clientSource!=null">
                and c.client_source=#{clientSource}
            </if>
        </where>
        group by c.province_no
        ) x
        left join (select t.buynum,t.buybalance,s.stocknum,s.stockbalance,
        (case when t.province_no is not null then t.province_no else s.province_no end) province_no
        from (select count(distinct t.client_id) as buynum, sum(t.buy_amount) as buybalance, c.province_no
        from jhdc.hisclient_product_trade t,jhdc.clientinfox c
        <where>
            c.client_id = t.client_id and <![CDATA[t.buy_times <>0]]>
            <if test="beginDate!=null and endDate!=null">
                and t.init_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
                to_number(to_char(#{endDate},'yyyyMMdd'))
            </if>
            <if test="branchNo != null">
                and c.branch_no in
                <foreach collection="branchNo" open="(" separator="," close=")" item="item">
                    #{item}
                </foreach>
            </if>
            <if test="clientType != null">
                and c.client_type=#{clientType}
            </if>
            <if test="clientSource!=null">
                and c.client_source=#{clientSource}
            </if>
            <if test="productType!=null">
                and t.product_type in
                <foreach collection="productType" open="(" separator="," close=")" item="item">
                    #{item}
                </foreach>
            </if>
        </where>
        group by c.province_no
        ) t
        full join (select count(distinct j.client_id) stocknum,sum(j.market_value) stockbalance,c.province_no from
        jhdc.hisstockjour j,jhdc.clientinfox c
        where j.init_date = to_number(to_char(#{endDate},'yyyyMMdd')) and j.current_share - j.back_share > 0
        and j.client_id = c.client_id and c.province_no not in (' ', '00')
        <if test="branchNo != null">
            and c.branch_no in
            <foreach collection="branchNo" open="(" separator="," close=")" item="item">
                #{item}
            </foreach>
        </if>
        <if test="clientType != null">
            and c.client_type=#{clientType}
        </if>
        <if test="clientSource!=null">
            and c.client_source=#{clientSource}
        </if>
        <if test="productType!=null">
            and j.product_type in
            <foreach collection="productType" open="(" separator="," close=")" item="item">
                #{item}
            </foreach>
        </if>
        group by c.province_no) s
        on s.province_no = t.province_no )y
        on x.province_no = y.province_no
        left join (select ci.name,ci.city_code from jhdc.t_sys_city ci where ci.parentid = 0) z
        on z.city_code = x.province_no
        where z.city_code is not null
        union all
        select nvl(x.opennum, 0) as open_clients,
        nvl(x.boundnum, 0) as bound_clients,
        z.name as name,
        nvl(y.buybalance, 0) as buy_balance,
        nvl(y.buynum, 0) as buy_clients,
        nvl(x.rboundnum,0) as rboundnum,
        nvl(x.bboundnum,0) as bboundnum,
        nvl(x.bopennum,0) as bopennum,
        nvl(y.stocknum,0) as stocknum,
        nvl(y.stockbalance,0) as stockbalance,
        (case when y.buynum = 0 or y.buynum is null then 0 else y.buybalance / y.buynum end) as avg
        from (select count(case when c.open_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd')) then
        c.client_id else null end) as opennum,
        count(case when c.bound_card_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd')) then
        c.client_id else null end) as boundnum,
        count(case when c.bound_card_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd')) and
        c.open_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and to_number(to_char(#{endDate},'yyyyMMdd'))
        then
        c.client_id else null end) as rboundnum,
        count(case when c.bound_card_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd')) and
        c.first_trade_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd')) then
        c.client_id else null end) as bboundnum,
        count(case when c.open_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd')) and
        c.first_trade_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd')) then
        c.client_id else null end) as bopennum,
        c.city
        from jhdc.clientinfox c
        WHERE c.city in('440300','440100')
        <if test="beginDate!=null and endDate!=null">
            and (c.open_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
            to_number(to_char(#{endDate},'yyyyMMdd')) or
            c.bound_card_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
            to_number(to_char(#{endDate},'yyyyMMdd')) or
            c.first_trade_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
            to_number(to_char(#{endDate},'yyyyMMdd')))
        </if>
        <if test="branchNo != null">
            and c.branch_no in
            <foreach collection="branchNo" open="(" separator="," close=")" item="item">
                #{item}
            </foreach>
        </if>
        <if test="clientType != null">
            and c.client_type=#{clientType}
        </if>
        <if test="clientSource!=null">
            and c.client_source=#{clientSource}
        </if>
        group by c.city) x
        left join (select t.buynum,t.buybalance,s.stocknum,s.stockbalance,
        (case when t.city is not null then t.city else s.city end) city
        from ( select count(distinct t.client_id) buynum,
        sum(t.buy_amount) buybalance,
        c.city
        from jhdc.hisclient_product_trade t, jhdc.clientinfox c
        <where>
            c.client_id = t.client_id and <![CDATA[t.buy_times <>0]]> and c.city in('440300','440100')
            <if test="beginDate!=null and endDate!=null">
                and t.init_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
                to_number(to_char(#{endDate},'yyyyMMdd'))
            </if>
            <if test="branchNo != null">
                and c.branch_no in
                <foreach collection="branchNo" open="(" separator="," close=")" item="item">
                    #{item}
                </foreach>
            </if>
            <if test="clientType != null">
                and c.client_type=#{clientType}
            </if>
            <if test="clientSource!=null">
                and c.client_source=#{clientSource}
            </if>
            <if test="productType!=null">
                and t.product_type in
                <foreach collection="productType" open="(" separator="," close=")" item="item">
                    #{item}
                </foreach>
            </if>
        </where>
        group by c.city ) t
        full join (select count(distinct j.client_id) stocknum,sum(j.market_value) stockbalance,c.city from
        jhdc.hisstockjour j,jhdc.clientinfox c
        where j.init_date = to_number(to_char(#{endDate},'yyyyMMdd')) and j.current_share - j.back_share > 0
        and j.client_id = c.client_id and c.city in ('440300', '440100')
        <if test="branchNo != null">
            and c.branch_no in
            <foreach collection="branchNo" open="(" separator="," close=")" item="item">
                #{item}
            </foreach>
        </if>
        <if test="clientType != null">
            and c.client_type=#{clientType}
        </if>
        <if test="clientSource!=null">
            and c.client_source=#{clientSource}
        </if>
        <if test="productType!=null">
            and j.product_type in
            <foreach collection="productType" open="(" separator="," close=")" item="item">
                #{item}
            </foreach>
        </if>
        group by c.city) s
        on s.city = t.city )y
        on x.city = y.city
        left join (select ci.name, ci.city_code
        from jhdc.t_sys_city ci
        where ci.city_code in('440300','440100')) z
        on z.city_code = x.city
        where z.city_code is not null)
        order by name
    </select>
    <!-- 广深客户开户绑卡统计查询 -->
    <select id="S_ClientGSob" parameterType="com.linkstec.crm.report.dto.ClientReportInDto" resultType="map">
        select
        /*深圳开户数*/
        nvl(sum(case when (c.open_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd')) and substr(c.city,0,4) = '4401') then 1 else 0 end),0) as osz
        /*广州开户数*/
        ,nvl(sum(case when (c.open_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd')) and substr(c.city,0,4) = '4403') then 1 else 0 end),0) as ogz
        /*深圳绑卡数*/
        ,nvl(sum(case when (c.bound_card_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd')) and substr(c.city,0,4) = '4401') then 1 else 0 end),0) as bsz
        /*广州绑卡数*/
        ,nvl(sum(case when (c.bound_card_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd')) and substr(c.city,0,4) = '4403') then 1 else 0 end),0) as bgz
        from jhdc.clientinfox c
        <where>
            substr(c.city,0,4) in('4401','4403')
            <if test="beginDate!=null and endDate!=null">
                and (c.open_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
                to_number(to_char(#{endDate},'yyyyMMdd'))
                or c.bound_card_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
                to_number(to_char(#{endDate},'yyyyMMdd')) )
            </if>
            <if test="branchNo != null">
                and c.branch_no in
                <foreach collection="branchNo" open="(" separator="," close=")" item="item">
                    #{item}
                </foreach>
            </if>
            <if test="clientType!=null">
                and c.client_type=#{clientType}
            </if>
            <if test="clientSource!=null">
                and c.client_source=#{clientSource}
            </if>
        </where>
    </select>
    <!-- 广深客户交易统计查询 -->
    <select id="S_ClientGStrade" parameterType="com.linkstec.crm.report.dto.ClientReportInDto" resultType="map">
        select
        nvl(sum(case when substr(c.city,0,4) = '4401' then t.buy_amount else 0 end),0) as szb /*深圳购买金额*/
        ,nvl(sum(case when substr(c.city,0,4) = '4403' then t.buy_amount else 0 end),0) as gzb /*广州购买金额*/
        ,count(case when substr(c.city,0,4) = '4401' then t.client_id else null end) as szbnum /*深圳购买用户数*/
        ,count(case when substr(c.city,0,4) = '4403' then t.client_id else null end) as gzbnum /*广州购买用户数*/
        from jhdc.clientinfox c,jhdc.hisclient_product_trade t
        <where>
            t.client_id = c.client_id
            and <![CDATA[t.buy_times <> 0]]>
            and substr(c.city,0,4) in('4401','4403')
            <if test="beginDate!=null and endDate!=null">
                and t.init_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
                to_number(to_char(#{endDate},'yyyyMMdd'))
            </if>
            <if test="branchNo != null">
                and t.branch_no in
                <foreach collection="branchNo" open="(" separator="," close=")" item="item">
                    #{item}
                </foreach>
            </if>
            <!-- 			<if test="productType!=null"> -->
            <!-- 				and t.product_type in -->
            <!-- 				<foreach collection="productType" open="(" separator="," close=")" -->
            <!-- 					item="item"> -->
            <!-- 					#{item} -->
            <!-- 				</foreach> -->
            <!-- 			</if>	 -->
            <if test="fundCompany!=null">
                and t.fund_company = #{fundCompany}
            </if>
            <if test="clientType!=null">
                and t.client_type=#{clientType}
            </if>
            <if test="clientSource!=null">
                and t.client_source=#{clientSource}
            </if>
        </where>
    </select>
    <!-- 客户来源统计表 -->
    <select id="S_ClientSource" parameterType="com.linkstec.crm.report.dto.ClientSourceInDto" resultType="map">
        select
        crm.fn_get_dictvalue('360_client_ly',t2.client_source) as client_source,
        nvl( t1.buy_users,0) as buy_users,
        nvl( t1.buy_amount,0) as buy_amount,
        t2.reg_users as reg_users,
        t2.bind_users as bind_users,
        t2.reg_bind_users as reg_bind_users,
        t2.bind_buy_users as bind_buy_users,
        t2.reg_buy_users as reg_buy_users
        from
        (select j.client_source,
        count(distinct case when j.open_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd')) then j.client_id else null end) as reg_users,
        count(distinct case when j.bound_card_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd')) then j.client_id else null end) as bind_users,
        count(distinct case when ((j.open_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd')) )and (j.bound_card_date between
        to_number(to_char(#{beginDate},'yyyyMMdd')) and to_number(to_char(#{endDate},'yyyyMMdd')))) then j.client_id
        else null end) as reg_bind_users,
        count(distinct case when ((j.first_trade_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd')) )and (j.bound_card_date between
        to_number(to_char(#{beginDate},'yyyyMMdd')) and to_number(to_char(#{endDate},'yyyyMMdd')))) then j.client_id
        else null end) as bind_buy_users,
        count(distinct case when ((j.open_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd')) )and (j.first_trade_date between
        to_number(to_char(#{beginDate},'yyyyMMdd')) and to_number(to_char(#{endDate},'yyyyMMdd')))) then j.client_id
        else null end) as reg_buy_users

        from jhdc.clientinfox j
        <where>
            <if test="branchNo!=null">
                and j.branch_no in
                <foreach collection="branchNo" open="(" separator="," close=")" item="item">
                    #{item}
                </foreach>
            </if>
            <if test="clientType!=null">
                and j.client_type=#{clientType}
            </if>
        </where>
        and j.client_source !=' '
        group by j.client_source) t2
        left join
        (select client_source,
        sum(case when a.init_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd'))then 1 else 0 end) as buy_users,
        sum(case when a.init_date between to_number(to_char(#{beginDate},'yyyyMMdd')) and
        to_number(to_char(#{endDate},'yyyyMMdd')) then a.deal_balance else 0 end) as buy_amount
        from jhdc.histradeinfojour a
        <where>
            a.bs_flag='B'
            <if test="branchNo!=null">
                and a.branch_no in
                <foreach collection="branchNo" open="(" separator="," close=")" item="item">
                    #{item}
                </foreach>
            </if>
            <if test="productType!=null">
                and a.product_type in
                <foreach collection="productType" open="(" separator=","
                         close=")" item="item">
                    #{item}
                </foreach>
            </if>
            <if test="clientType!=null">
                and a.client_type=#{clientType}
            </if>
        </where>
        and a.client_source !=' '
        group by a.client_source) t1


        on t2.client_source = t1.client_source

    </select>
    <select id="R_RegclientsTzyx" parameterType="com.linkstec.crm.report.dto.RegClientsTZYXDto" resultType="map">
     



select  t.regtype, 
       t.a       as hi,
       t.b       as ti,
       t.c       as ni,
       t.d       as hangup,
       t.e       as no_answer,
       t.f       as rej,
       t.g       as sd,
       t.h       as ot,
      decode(t.regtype,'购买占比(%)',null,t.a+t.b+t.c+t.d+t.e+t.f+t.g+t.h)  as al  from ((
select g.*,round(decode(g.buy,null,0,0,0,g.buy1/g.buy*100),2) zb1,
round(decode(g.buy,null,0,0,0,g.buy2/g.buy*100),2) zb2,
       round(decode(g.buy,null,0,0,0,g.buy3/g.buy*100),2) zb3,
      round(decode(g.buy,null,0,0,0,g.buy4/g.buy*100),2) zb4,
       round(decode(g.buy,null,0,0,0,g.buy5/g.buy*100),2) zb5,
      round(decode(g.buy,null,0,0,0,g.buy6/g.buy*100),2) zb6,
      round(decode(g.buy,null,0,0,0,g.buy7/g.buy*100),2) zb7,
       round(decode(g.buy,null,0,0,0,g.buy8/g.buy*100),2) zb8
 from (
select     nvl(sum(case when  t.first_trade_date &gt;=to_number(substr(t.tag, 7)) then 1 else 0 end),0) buy,
        nvl(sum(case when t.tzyx = 1  then 1 else 0 end),0) reg1,
        nvl(sum(case when t.tzyx = 1 and t.bound_card_date &gt;=to_number(substr(t.tag, 7)) then 1 else 0 end),0) band1,
       nvl( sum(case when t.tzyx = 1 and t.first_trade_date &gt;=to_number(substr(t.tag, 7)) then 1 else 0 end),0) buy1,
       nvl( sum(case when t.tzyx = 1 and t.first_trade_date&gt;=to_number(to_char(to_date(t.bg,'yyyy-MM-dd hh24:mi:ss'),'yyyyMMdd')) then 1 else 0 end),0) valid1,
        
        nvl( sum(case when t.tzyx = 2 then 1 else 0 end),0) reg2,
       nvl( sum(case when t.tzyx = 2 and t.bound_card_date &gt;=to_number(substr(t.tag, 7)) then 1 else 0 end),0) band2,
       nvl( sum(case when t.tzyx = 2 and t.first_trade_date &gt;=to_number(substr(t.tag, 7)) then 1 else 0 end),0) buy2,
       nvl( sum(case when t.tzyx = 2 and t.first_trade_date&gt;=to_number(to_char(to_date(t.bg,'yyyy-MM-dd hh24:mi:ss'),'yyyyMMdd')) then 1 else 0 end),0) valid2,
       
        nvl( sum(case when t.tzyx = 3  then 1 else 0 end),0) reg3,
       nvl( sum(case when t.tzyx = 3 and t.bound_card_date &gt;=to_number(substr(t.tag, 7)) then 1 else 0 end),0) band3,
       nvl( sum(case when t.tzyx = 3 and t.first_trade_date &gt;=to_number(substr(t.tag, 7)) then 1 else 0 end),0) buy3,
       nvl( sum(case when t.tzyx = 3 and t.first_trade_date&gt;=to_number(to_char(to_date(t.bg,'yyyy-MM-dd hh24:mi:ss'),'yyyyMMdd')) then 1 else 0 end),0) valid3,
        nvl( sum(case when t.tzyx = 4  then 1 else 0 end),0) reg4,
        nvl(sum(case when t.tzyx = 4 and t.bound_card_date &gt;=to_number(substr(t.tag, 7)) then 1 else 0 end),0) band4,
        nvl(sum(case when t.tzyx = 4 and t.first_trade_date &gt;=to_number(substr(t.tag, 7)) then 1 else 0 end),0) buy4,
       nvl( sum(case when t.tzyx = 4 and t.first_trade_date&gt;=to_number(to_char(to_date(t.bg,'yyyy-MM-dd hh24:mi:ss'),'yyyyMMdd')) then 1 else 0 end),0) valid4,
       nvl(  sum(case when t.tzyx = 5  then 1 else 0 end),0) reg5,
       nvl( sum(case when t.tzyx = 5 and t.bound_card_date &gt;=to_number(substr(t.tag, 7)) then 1 else 0 end),0) band5,
       nvl( sum(case when t.tzyx = 5 and t.first_trade_date &gt;=to_number(substr(t.tag, 7)) then 1 else 0 end),0) buy5,
       nvl( sum(case when t.tzyx = 5 and t.first_trade_date&gt;=to_number(to_char(to_date(t.bg,'yyyy-MM-dd hh24:mi:ss'),'yyyyMMdd')) then 0 else 0 end),0) valid5,
       nvl(  sum(case when t.tzyx = 6  then 1 else 0 end),0) reg6,
        nvl(sum(case when t.tzyx = 6 and t.bound_card_date &gt;=to_number(substr(t.tag, 7)) then 1 else 0 end),0) band6,
       nvl( sum(case when t.tzyx = 6 and t.first_trade_date &gt;=to_number(substr(t.tag, 7)) then 1 else 0 end),0) buy6,
       nvl( sum(case when t.tzyx = 6 and t.first_trade_date&gt;=to_number(to_char(to_date(t.bg,'yyyy-MM-dd hh24:mi:ss'),'yyyyMMdd')) then 0 else 0 end),0) valid6,
        nvl( sum(case when t.tzyx = 7  then 1 else 0 end),0) reg7,
       nvl( sum(case when t.tzyx = 7 and t.bound_card_date &gt;=to_number(substr(t.tag, 7)) then 1 else 0 end),0) band7,
      nvl(  sum(case when t.tzyx = 7 and t.first_trade_date &gt;=to_number(substr(t.tag, 7)) then 1 else 0 end),0) buy7,
       nvl( sum(case when t.tzyx = 7 and t.first_trade_date&gt;=to_number(to_char(to_date(t.bg,'yyyy-MM-dd hh24:mi:ss'),'yyyyMMdd')) then 0 else 0 end),0) valid7,
       nvl(  sum(case when t.tzyx = 8  then 1 else 0 end),0) reg8,
      nvl(  sum(case when t.tzyx = 8 and t.bound_card_date &gt;=to_number(substr(t.tag, 7)) then 1 else 0 end),0) band8,
      nvl(  sum(case when t.tzyx = 8 and t.first_trade_date &gt;=to_number(substr(t.tag, 7)) then 1 else 0 end),0) buy8,
      nvl(  sum(case when t.tzyx = 8 and t.first_trade_date&gt;=to_number(to_char(to_date(t.bg,'yyyy-MM-dd hh24:mi:ss'),'yyyyMMdd')) then 1 else 0 end),0) valid8
     from (SELECT t.client_id, t.tzyx, h.tag,h.status, min(gt.ring) bg,c.open_date,c.first_trade_date,c.bound_card_date
  from crm.t_kh_tzyx t
  left join (select a.khid, t.ring
               from crm.t_kh_xx a, crm.t_call_record t
              where a.gtsj = t.called_no and a.khlx='01') gt
    on gt.khid = t.client_id
  inner join (select *
               from (select kt.client_id, kt.tag, kt.status
                        from t_kf_task /*LT*/ kt
                       group by kt.client_id, kt.tag, kt.status)) h
    on h.client_id = t.client_id
     left join jhdc.clientinfox c
                             on t.client_id = c.client_id
 where h.tag like '@注册客户-%'
   and h.status != 3
   and SUBSTR(h.TAG, 7) &gt;= to_char(#{beginDate},'yyyyMMdd')
   and substr(h.tag, 7) &lt;= to_char(#{endDate},'yyyyMMdd')
   and gt.ring &gt;= to_char(to_date(substr(h.tag,7),'yyyy-mm-dd'),'yyyy-mm-dd')
   group by t.client_id, t.tzyx,h.tag,h.status,c.open_date,c.first_trade_date,c.bound_card_date)  t ) g )
         UNPIVOT((a, b, c, d,e,f,g,h) FOR
                        regType IN
                        ((reg1, reg2,reg3,reg4,reg5,reg6,reg7,reg8 ) AS '注册数',
                         (band1,band2,band3,band4,band5,band6,band7,band8) AS '绑卡总计',
                         (buy1,buy2,buy3,buy4,buy5,buy6,buy7,buy8) AS '购买总计',
                          (zb1,zb2,zb3,zb4,zb5,zb6,zb7,zb8) as '购买占比(%)',
                         (valid1,valid2,valid3,valid4,valid5,valid6,valid7,valid8) AS '有效购买总计'
                           ) )  ) t
 
     

   
    </select>
    <select id="R_BandclientsTzyx" parameterType="com.linkstec.crm.report.dto.RegClientsTZYXDto" resultType="map">
     

select  t.regtype, 
       t.a       as hi,
       t.b       as ti,
       t.c       as ni,
       t.d       as hangup,
       t.e       as no_answer,
       t.f       as rej,
       t.g       as sd,
       t.h       as ot,
      decode(t.regtype,'购买占比(%)',null,t.a+t.b+t.c+t.d+t.e+t.f+t.g+t.h)  as al  from ((
select g.*,round(decode(g.buy,null,0,0,0,g.buy1/g.buy*100),2) zb1,
round(decode(g.buy,null,0,0,0,g.buy2/g.buy*100),2) zb2,
       round(decode(g.buy,null,0,0,0,g.buy3/g.buy*100),2) zb3,
      round(decode(g.buy,null,0,0,0,g.buy4/g.buy*100),2) zb4,
       round(decode(g.buy,null,0,0,0,g.buy5/g.buy*100),2) zb5,
      round(decode(g.buy,null,0,0,0,g.buy6/g.buy*100),2) zb6,
      round(decode(g.buy,null,0,0,0,g.buy7/g.buy*100),2) zb7,
       round(decode(g.buy,null,0,0,0,g.buy8/g.buy*100),2) zb8
 from (select     nvl(sum(case when  t.first_trade_date &gt;=to_number(substr(t.tag, 7)) then 1 else 0 end),0) buy,
        nvl(sum(case when t.tzyx = 1  then 1 else 0 end),0) band1,
      
        nvl(sum(case when t.tzyx = 1 and t.first_trade_date &gt;=to_number(substr(t.tag, 7)) then 1 else 0 end),0) buy1,
        nvl(sum(case when t.tzyx = 1 and t.first_trade_date&gt;=to_number(to_char(to_date(t.bg,'yyyy-MM-dd hh24:mi:ss'),'yyyyMMdd')) then 1 else 0 end),0) valid1,
        
       nvl(  sum(case when t.tzyx = 2 then 1 else 0 end),0) band2,
       
       nvl( sum(case when t.tzyx = 2 and t.first_trade_date &gt;=to_number(substr(t.tag, 7)) then 1 else 0 end),0) buy2,
       nvl( sum(case when t.tzyx = 2 and t.first_trade_date&gt;=to_number(to_char(to_date(t.bg,'yyyy-MM-dd hh24:mi:ss'),'yyyyMMdd')) then 1 else 0 end),0) valid2,
       
       nvl(  sum(case when t.tzyx = 3  then 1 else 0 end),0) band3,
     
       nvl( sum(case when t.tzyx = 3 and t.first_trade_date &gt;=to_number(substr(t.tag, 7)) then 1 else 0 end),0) buy3,
       nvl( sum(case when t.tzyx = 3 and t.first_trade_date&gt;=to_number(to_char(to_date(t.bg,'yyyy-MM-dd hh24:mi:ss'),'yyyyMMdd')) then 1 else 0 end),0) valid3,
       nvl(  sum(case when t.tzyx = 4  then 1 else 0 end),0) band4,
       
       nvl( sum(case when t.tzyx = 4 and t.first_trade_date &gt;=to_number(substr(t.tag, 7)) then 1 else 0 end),0) buy4,
       nvl( sum(case when t.tzyx = 4 and t.first_trade_date&gt;=to_number(to_char(to_date(t.bg,'yyyy-MM-dd hh24:mi:ss'),'yyyyMMdd')) then 1 else 0 end),0) valid4,
      nvl(   sum(case when t.tzyx = 5  then 1 else 0 end),0) band5,
      
      nvl(  sum(case when t.tzyx = 5 and t.first_trade_date &gt;=to_number(substr(t.tag, 7)) then 1 else 0 end),0) buy5,
      nvl(  sum(case when t.tzyx = 5 and t.first_trade_date&gt;=to_number(to_char(to_date(t.bg,'yyyy-MM-dd hh24:mi:ss'),'yyyyMMdd')) then 0 else 0 end),0) valid5,
      nvl(   sum(case when t.tzyx = 6  then 1 else 0 end),0) band6,
    
       nvl( sum(case when t.tzyx = 6 and t.first_trade_date &gt;=to_number(substr(t.tag, 7)) then 1 else 0 end),0) buy6,
       nvl( sum(case when t.tzyx = 6 and t.first_trade_date&gt;=to_number(to_char(to_date(t.bg,'yyyy-MM-dd hh24:mi:ss'),'yyyyMMdd')) then 0 else 0 end),0) valid6,
       nvl(  sum(case when t.tzyx = 7  then 1 else 0 end),0) band7,
      
       nvl( sum(case when t.tzyx = 7 and t.first_trade_date &gt;=to_number(substr(t.tag, 7)) then 1 else 0 end),0) buy7,
      nvl(  sum(case when t.tzyx = 7 and t.first_trade_date&gt;=to_number(to_char(to_date(t.bg,'yyyy-MM-dd hh24:mi:ss'),'yyyyMMdd')) then 0 else 0 end),0) valid7,
       nvl(  sum(case when t.tzyx = 8  then 1 else 0 end),0) band8,
      
      nvl(  sum(case when t.tzyx = 8 and t.first_trade_date &gt;=to_number(substr(t.tag, 7)) then 1 else 0 end),0) buy8,
     nvl(   sum(case when t.tzyx = 8 and t.first_trade_date&gt;=to_number(to_char(to_date(t.bg,'yyyy-MM-dd hh24:mi:ss'),'yyyyMMdd')) then 1 else 0 end),0) valid8
     from (
SELECT t.client_id, t.tzyx, h.tag,h.status, min(gt.ring) bg,c.open_date,c.first_trade_date,c.bound_card_date
  from crm.t_kh_tzyx t
  left join (select a.khid, t.ring
               from crm.t_kh_xx a, crm.t_call_record t
              where a.gtsj = t.called_no and a.khlx = '01') gt
    on gt.khid = t.client_id
  inner join (select *
               from (select kt.client_id, kt.tag, kt.status
                        from t_kf_task /*LT*/ kt
                       group by kt.client_id, kt.tag, kt.status)) h
    on h.client_id = t.client_id
     left join jhdc.clientinfox c
                             on t.client_id = c.client_id
 where h.tag like '@绑卡客户-%'
   and h.status != 3
   and SUBSTR(h.TAG, 7) &gt;= to_char(#{beginDate},'yyyyMMdd')
   and substr(h.tag, 7) &lt;= to_char(#{endDate},'yyyyMMdd')
   and gt.ring &gt;= to_char(to_date(substr(h.tag,7),'yyyy-mm-dd'),'yyyy-mm-dd')
   group by t.client_id, t.tzyx,h.tag,h.status,c.open_date,c.first_trade_date,c.bound_card_date)  t ) g )
         UNPIVOT((a, b, c, d,e,f,g,h) FOR
                        regType IN
                        (
                         (band1,band2,band3,band4,band5,band6,band7,band8) AS '绑卡总计',
                         (buy1,buy2,buy3,buy4,buy5,buy6,buy7,buy8) AS '购买总计',
                         (zb1,zb2,zb3,zb4,zb5,zb6,zb7,zb8) as '购买占比(%)' ,
                         (valid1,valid2,valid3,valid4,valid5,valid6,valid7,valid8) AS '有效购买总计'
                            ))  ) t
 

    </select>

    <select id="R_RegkfRate" parameterType="com.linkstec.crm.report.dto.RegClientsTZYXDto" resultType="map">
       select ha.member_name,
        count(ha.member_name) sums,
        sum(case
        when ha.tzyx in (1, 2, 3, 4, 8) and ha.first_trade_date >= ha.bg then
        1
        when ha.tzyx in (1, 2, 3, 4, 8)
        and ha.first_trade_date &lt; ha.bg and ha.sale_amount2 &gt; 0 then
        1
        else
        0
        end) conversion_phones,
        decode(count(ha.member_name), 0, 0, null, 0,
        round(sum(case
        when ha.tzyx in (1, 2, 3, 4, 8) and ha.first_trade_date >= ha.bg then
        1
        when ha.tzyx in (1, 2, 3, 4, 8)
        and ha.first_trade_date &lt; ha.bg and ha.sale_amount2 &gt; 0 then
        1
        else
        0
        end) / count(ha.member_name) * 100, 2)) || '%' as rate,
        nvl(sum(case when ha.tzyx in (1, 2, 3, 4, 8)  then ha.sale_amount2 else 0 end ),0) sale
        from (select a.member_name,
        a.client_id,
        a.tzyx,
        a.status,
        a.bg,
        a.open_date,
        a.bound_card_date,
        a.first_trade_date,
        a.tag,
        sum(case
        when hi.init_date &lt; a.bg then hi.sale_amount else 0 end) sale_amount1,
        sum(case
        when hi.init_date >= a.bg then
        hi.sale_amount
        else
        0
        end) sale_amount2
        from (SELECT t.tzyx,
        t.client_id,
        k.member_name || '(' || h.deal_user || ')' member_name,
        h.status,
        min(r.ring) bg,
        c.open_date,
        (case
        when c.first_trade_date = 0 and c.rt_f_trade_date = 0 then
        0
        when c.first_trade_date = 0 then
        c.rt_f_trade_date
        when c.rt_f_trade_date = 0 then
        c.first_trade_date
        else
        least(c.first_trade_date, c.rt_f_trade_date)
        end) first_trade_date,
        c.bound_card_date,
        h.tag
        from crm.t_kh_tzyx t
        left join jhdc.clientinfox c
        on to_char(t.client_id) = c.client_id
        left join (select a.khid,
        to_number(to_char(to_date(cr.ring,
        'yyyy-mm-dd hh24:mi:ss'),
        'yyyyMMdd')) RING
        from t_kh_xx a, t_call_record cr
        where a.gtsj = cr.called_no
        and a.khlx in ('01')
        union all
        select a1.khid,
        to_number(to_char(to_date(cr1.ring,
        'yyyy-mm-dd hh24:mi:ss'),
        'yyyyMMdd')) RING
        from t_kh_xx a1, t_call_record cr1
        where a1.gtsj = cr1.called_no
        and a1.khlx in ('00')
        and a1.orgid = '6666') r
        on r.khid = t.client_id
        left join (select kt.client_id,
        kt.tag，to_number(to_char(kt.open_date,
        'yyyyMMdd')) tag1,
        kt.deal_user,
        kt.status
        from t_kf_task /*LT*/ kt
        group by kt.client_id,
        kt.tag,
        kt.deal_user,
        kt.status,
        kt.open_date) h
        on h.client_id = t.client_id
        left join l_member k
        on k.member_id = h.deal_user
        where h.tag like '@注册客户-%'
        and h.status = 2
        and r.ring >= tag1
        and tag1 between to_char(#{beginDate},'yyyyMMdd') and to_char(#{endDate},'yyyyMMdd')
        group by t.client_id,
        k.member_name,
        h.status,
        c.open_date,
        c.first_trade_date,
        c.bound_card_date,
        h.tag,
        t.tzyx,
        h.deal_user,
        c.rt_f_trade_date) a
        left join (select ct.client_id,
        ct.deal_balance sale_amount,
        ct.init_date
        from jhdc.histradeinfojour ct
        union all
        select ho.client_id_b,
        ho.business_balance sale_amount,
        ho.init_date
        from hs_opfund.ofrealtime ho
        where ho.deal_flag = 1) hi
        on hi.client_id = to_char(a.client_id)
        group by a.member_name,
        a.client_id,
        a.tzyx,
        a.status,
        a.bg,
        a.open_date,
        a.bound_card_date,
        a.first_trade_date,
        a.tag) ha
        group by ha.member_name

    
    </select>

    <select id="R_BandkfRate" parameterType="com.linkstec.crm.report.dto.RegClientsTZYXDto" resultType="map">
        select ha.member_name,
        count(ha.member_name) sums,
        sum(case
        when ha.tzyx in (1, 2, 3, 4, 8) and ha.first_trade_date >= ha.bg then
        1
        when ha.tzyx in (1, 2, 3, 4, 8)
        and ha.first_trade_date &lt; ha.bg and ha.sale_amount2 &gt; 0 then
        1
        else
        0
        end) conversion_phones,
        decode(count(ha.member_name), 0, 0, null, 0,
        round(sum(case
        when ha.tzyx in (1, 2, 3, 4, 8) and ha.first_trade_date >= ha.bg then
        1
        when ha.tzyx in (1, 2, 3, 4, 8)
        and ha.first_trade_date &lt; ha.bg and ha.sale_amount2 &gt; 0 then
        1
        else
        0
        end) / count(ha.member_name) * 100, 2)) || '%' as rate,
        nvl(sum(case when ha.tzyx in (1, 2, 3, 4, 8)  then ha.sale_amount2 else 0 end ),0) sale
        from (select a.member_name,
        a.client_id,
        a.tzyx,
        a.status,
        a.bg,
        a.open_date,
        a.bound_card_date,
        a.first_trade_date,
        a.tag,
        sum(case
        when hi.init_date &lt; a.bg then hi.sale_amount else 0 end) sale_amount1,
        sum(case
        when hi.init_date >= a.bg then
        hi.sale_amount
        else
        0
        end) sale_amount2
        from (SELECT t.tzyx,
        t.client_id,
        k.member_name || '(' || h.deal_user || ')' member_name,
        h.status,
        min(r.ring) bg,
        c.open_date,
        (case
        when c.first_trade_date = 0 and c.rt_f_trade_date = 0 then
        0
        when c.first_trade_date = 0 then
        c.rt_f_trade_date
        when c.rt_f_trade_date = 0 then
        c.first_trade_date
        else
        least(c.first_trade_date, c.rt_f_trade_date)
        end) first_trade_date,
        c.bound_card_date,
        h.tag
        from crm.t_kh_tzyx t
        left join jhdc.clientinfox c
        on to_char(t.client_id) = c.client_id
        left join (select a.khid,
        to_number(to_char(to_date(cr.ring,
        'yyyy-mm-dd hh24:mi:ss'),
        'yyyyMMdd')) RING
        from t_kh_xx a, t_call_record cr
        where a.gtsj = cr.called_no
        and a.khlx in ('01')
        union all
        select a1.khid,
        to_number(to_char(to_date(cr1.ring,
        'yyyy-mm-dd hh24:mi:ss'),
        'yyyyMMdd')) RING
        from t_kh_xx a1, t_call_record cr1
        where a1.gtsj = cr1.called_no
        and a1.khlx in ('00')
        and a1.orgid = '6666') r
        on r.khid = t.client_id
        left join (select kt.client_id,
        kt.tag，to_number(to_char(kt.open_date,
        'yyyyMMdd')) tag1,
        kt.deal_user,
        kt.status
        from t_kf_task /*LT*/ kt
        group by kt.client_id,
        kt.tag,
        kt.deal_user,
        kt.status,
        kt.open_date) h
        on h.client_id = t.client_id
        left join l_member k
        on k.member_id = h.deal_user
        where h.tag like '@绑卡客户-%'
        and h.status = 2
        and r.ring >= tag1
        and tag1 between to_char(#{beginDate},'yyyyMMdd') and to_char(#{endDate},'yyyyMMdd')
        group by t.client_id,
        k.member_name,
        h.status,
        c.open_date,
        c.first_trade_date,
        c.bound_card_date,
        h.tag,
        t.tzyx,
        h.deal_user,
        c.rt_f_trade_date) a
        left join (select ct.client_id,
        ct.deal_balance sale_amount,
        ct.init_date
        from jhdc.histradeinfojour ct
        union all
        select ho.client_id_b,
        ho.business_balance sale_amount,
        ho.init_date
        from hs_opfund.ofrealtime ho
        where ho.deal_flag = 1) hi
        on hi.client_id = to_char(a.client_id)
        group by a.member_name,
        a.client_id,
        a.tzyx,
        a.status,
        a.bg,
        a.open_date,
        a.bound_card_date,
        a.first_trade_date,
        a.tag) ha
        group by ha.member_name
    </select>
    <select id="R_KHCHANNELTJ" parameterType="map" resultType="map">
      select a.answerCode,nvl(sum(a.clients),0) clients, a.answer from (
select crm.fn_get_dictvalue('channel',t.channel) answerCode,
t.channel answer,
 count(t.client_id) clients
  from crm.t_kh_tzyx t
 inner join crm.T_kh_xx a
    on t.client_id = a.khid

 where t.channel is not null
  and (a.khlx = '01' 
  or (a.khlx = '00' and a.orgid = '6666'))
group by t.channel

union all

  select crm.fn_get_dictvalue('channel', t.answer_code) answerCode,
 t.answer_code answer,
  count(t.client_id) clients
    from jhdc.questionnaire t
   inner join crm.T_kh_xx a
      on t.client_id = a.khid
  
   where t.answer_code != -1
     and (a.khlx = '01'
     or (a.khlx = '00' and a.orgid = '6666'))
    and t.client_id not in (select c.client_id from crm.t_Kh_Tzyx c)
     group by t.answer_code
    
  )a group by  answerCode,a.answer order by a.answer
    </select>

    <select id="S_ClientNewhandIncomes" parameterType="com.linkstec.crm.report.dto.ClientSourceInDto" resultType="map">
        select a.orgid,
        (select b.jg_name
        from crm.l_Organization_Expand b
        where b.jgid = a.orgid) khJgname,
        g.client_id,
        a.khxm,
        e.dealBalance,
        g.product_code,
        (select c.product_name
        from jhdc.productproperty c
        where c.product_code = g.product_code) productName,
        g.incomesPt,
        g.incomesXs,
        g.incomesBx
        from (select t.client_id,
        t.product_code,
        sum(nvl(t.incomes_pt, 0)) incomesPt, /*普通收益*/
        sum(nvl(t.incomes_xs, 0)) incomesXs, /*新手收益*/
        sum(nvl(t.incomes_bx, 0)) incomesBx /*补息金额*/
        from jhdc.hisnewhand_incomes t
        group by t.client_id, t.product_code
        order by t.client_id) g
        left join crm.T_kh_xx a
        on to_number(g.client_id) = a.khid
        left join (select d.client_id,
        d.product_code,
        sum(nvl(d.deal_balance, 0)) dealBalance
        from jhdc.histradeinfojour d
        where d.bs_flag = 'B'
        group by d.client_id, d.product_code) e
        on e.client_id = g.client_id
        and e.product_code = g.product_code

        <where>
            <if test="branchNo!=null">
                and a.orgid in
                <foreach collection="branchNo" open="(" separator="," close=")" item="item">
                    #{item}
                </foreach>
            </if>
            <if test="productCode!=null">
                and (g.product_code like trim(' ' FROM #{productCode})||'%')
            </if>
            <if test="khid!=null">
                and (g.client_id like trim(' ' FROM #{khid})||'%' or a.khxm like trim(' ' FROM #{khid})||'%' )
            </if>
        </where>
        order by g.client_id, g.product_code
    </select>
    <select id="S_ClientNewhandDealbalance" parameterType="com.linkstec.crm.report.dto.ClientSourceInDto" resultType="Double">
        select  sum(nvl(dealBalance,0))
        from (
        select a.orgid,
        (select b.jg_name
        from crm.l_Organization_Expand b
        where b.jgid = a.orgid) khJgname,
        g.client_id,
        a.khxm,
        e.dealBalance,
        g.product_code,
        (select c.product_name
        from jhdc.productproperty c
        where c.product_code = g.product_code) productName,
        g.incomesPt,
        g.incomesXs,
        g.incomesBx
        from (select t.client_id,
        t.product_code,
        sum(nvl(t.incomes_pt, 0)) incomesPt, /*普通收益*/
        sum(nvl(t.incomes_xs, 0)) incomesXs, /*新手收益*/
        sum(nvl(t.incomes_bx, 0)) incomesBx /*补息金额*/
        from jhdc.hisnewhand_incomes t
        group by t.client_id, t.product_code
        order by t.client_id) g
        left join crm.T_kh_xx a
        on to_number(g.client_id) = a.khid
        left join (select d.client_id,
        d.product_code,
        sum(nvl(d.deal_balance, 0)) dealBalance
        from jhdc.histradeinfojour d
        where d.bs_flag = 'B'
        group by d.client_id, d.product_code) e
        on e.client_id = g.client_id
        and e.product_code = g.product_code

        <where>
            <if test="branchNo!=null">
                and a.orgid in
                <foreach collection="branchNo" open="(" separator="," close=")" item="item">
                    #{item}
                </foreach>
            </if>
            <if test="productCode!=null">
                and (g.product_code like trim(' ' FROM #{productCode})||'%')
            </if>
            <if test="khid!=null">
                and (g.client_id like trim(' ' FROM #{khid})||'%' or a.khxm like trim(' ' FROM #{khid})||'%' )
            </if>
        </where>
        order by g.client_id, g.product_code)
    </select>
    <select id="S_ClientNewhandIncomesBx" parameterType="com.linkstec.crm.report.dto.ClientSourceInDto" resultType="Double">
        select  sum(nvl(incomesBx,0))
         from (
        select a.orgid,
        (select b.jg_name
        from crm.l_Organization_Expand b
        where b.jgid = a.orgid) khJgname,
        g.client_id,
        a.khxm,
        e.dealBalance,
        g.product_code,
        (select c.product_name
        from jhdc.productproperty c
        where c.product_code = g.product_code) productName,
        g.incomesPt,
        g.incomesXs,
        g.incomesBx
        from (select t.client_id,
        t.product_code,
        sum(nvl(t.incomes_pt, 0)) incomesPt, /*普通收益*/
        sum(nvl(t.incomes_xs, 0)) incomesXs, /*新手收益*/
        sum(nvl(t.incomes_bx, 0)) incomesBx /*补息金额*/
        from jhdc.hisnewhand_incomes t
        group by t.client_id, t.product_code
        order by t.client_id) g
        left join crm.T_kh_xx a
        on to_number(g.client_id) = a.khid
        left join (select d.client_id,
        d.product_code,
        sum(nvl(d.deal_balance, 0)) dealBalance
        from jhdc.histradeinfojour d
        where d.bs_flag = 'B'
        group by d.client_id, d.product_code) e
        on e.client_id = g.client_id
        and e.product_code = g.product_code

        <where>
            <if test="branchNo!=null">
                and a.orgid in
                <foreach collection="branchNo" open="(" separator="," close=")" item="item">
                    #{item}
                </foreach>
            </if>
            <if test="productCode!=null">
                and (g.product_code like trim(' ' FROM #{productCode})||'%')
            </if>
            <if test="khid!=null">
                and (g.client_id like trim(' ' FROM #{khid})||'%' or a.khxm like trim(' ' FROM #{khid})||'%' )
            </if>
        </where>
        order by g.client_id, g.product_code)
    </select>

    <select id="R_RegClientsInfo" parameterType="map" resultType="map">
        select a.member_name,
            a.client_id,
        a.khxm,
            a.tzyx,
            a.status,
            a.bg,
            a.open_date,
            a.bound_card_date,
            a.first_trade_date,
            a.tag,
            a.tag1,
            sum(case when hi.init_date &lt; a.bg then hi.sale_amount else 0 end ) sale_amount1,
            sum(case when hi.init_date &gt;= a.bg then hi.sale_amount else 0 end ) sale_amount2
        from  (SELECT t.tzyx,t.client_id,r.khxm,
              k.member_name || '(' || h.deal_user || ')' member_name,
              h.status,
              min(r.ring) bg,
              c.open_date,
              (case
               when c.first_trade_date = 0 and c.rt_f_trade_date = 0 then
               0
               when c.first_trade_date = 0 then
                c.rt_f_trade_date
                when c.rt_f_trade_date = 0 then
                 c.first_trade_date
                 else
                    least(c.first_trade_date, c.rt_f_trade_date)
                      end) first_trade_date,
        c.bound_card_date,
        h.tag,h.tag1
        from crm.t_kh_tzyx t
        left join jhdc.clientinfox c
        on to_char(t.client_id) = c.client_id
        left join (select a.khid,a.khxm,
        to_number(to_char(to_date(cr.ring,
        'yyyy-mm-dd hh24:mi:ss'),
        'yyyyMMdd')) RING
        from t_kh_xx a, t_call_record cr
        where a.gtsj = cr.called_no
        and a.khlx in ('01')
        union all
        select a1.khid,a1.khxm,
        to_number(to_char(to_date(cr1.ring,
        'yyyy-mm-dd hh24:mi:ss'),
        'yyyyMMdd')) RING
        from t_kh_xx a1, t_call_record cr1
        where a1.gtsj = cr1.called_no
        and a1.khlx in ('00')
        and a1.orgid = '6666') r
        on r.khid = t.client_id
        left join (select kt.client_id,
        kt.tag，to_number(to_char(kt.open_date, 'yyyyMMdd')) tag1,
        kt.deal_user,
        kt.status
        from t_kf_task /*LT*/ kt
        group by kt.client_id,
        kt.tag,
        kt.deal_user,
        kt.status,
        kt.open_date) h
        on h.client_id = t.client_id
        left join l_member k
        on k.member_id = h.deal_user
        where (1=1)
        <if test="tag != null ">
            and h.tag like #{tag}
        </if>
        <if test="clientId != null">
            and t.client_id like #{clientId}   or r.khxm like #{clientId}
        </if>
        and h.status = 2
        and r.ring >= tag1
        <if test="beginDate != null">
            and tag1 &gt;= to_char(#{beginDate},'yyyyMMdd')
        </if>
        <if test="endDate != null">
            and tag1 &lt;= to_char(#{endDate},'yyyyMMdd')
        </if>
        group by t.client_id,
        r.khxm,
        k.member_name,
        h.status,
        c.open_date,
        c.first_trade_date,
        c.bound_card_date,
        h.tag,
        h.tag1,
        t.tzyx,
        h.deal_user,
        c.rt_f_trade_date) a
        left join (select ct.client_id,
        ct.deal_balance sale_amount,ct.init_date
        from jhdc.histradeinfojour ct
        union all
        select ho.client_id_b,
        ho.business_balance sale_amount,ho.init_date
        from hs_opfund.ofrealtime ho
        where ho.deal_flag = 1
        ) hi
        on hi.client_id = to_char(a.client_id)

        where (1 = 1)
        <if test="memberName != null">
            and a.member_name = #{memberName}
        </if>
        group by a.member_name,
        a.client_id,
        a.khxm,
        a.tzyx,
        a.status,
        a.bg,
        a.open_date,
        a.bound_card_date,
        a.first_trade_date,
        a.tag,a.tag1
    </select>
</mapper>
